#summary Information about the debugging functionality in the emulator.
#labels Development

This page contains information about features/functionality that may not yet be implemented. This is mainly an area where I can put my ideas down so I don't forget them :)

= Features =
 * *Per-game persistence*
  * Breakpoints, options, etc are saved across runs of games
 * *Detailed statistics*
  * Statistics today are pretty poorly implemented - need a nice Performance Counter like setup for gathering, recording, and reporting stats
  * Stats on every component (already have CPU and Video today, but information like context switches/sec, IO bytes/sec, etc from the BIOS and others would be nice)
 * *Lots of Flow Control Options*
  * Normal stepping, step in/out/over, and defined breakpoints
  * Break on any/specific BIOS routines
  * Break on memory access
  * Break on events (sourced from any component, such as context switches from the BIOS)
  * Break on CPU/BIOS/etc errors (such as invalid memory access, file not found, etc)
 * *Detailed inspection*
  * Component state visualization: CPU registers/etc, video state (buffers, textures, etc), BIOS handles (threads, file handles, etc), audio stuff...
  * Memory inspection: dumping, differences, searching (including differential searches)
 * *Code display/analysis*
  * Callstacks
  * Regular disassembly dumps
  * Basic code annotation (jump targets, flow constructs (if(...), for(...)))
  * Infotips like VS (hover over anything to get more information)
  * 'Find All References'-like support for code locations (find code that calls this method, find code that references this address, etc)

= TODO =
 * Everything

